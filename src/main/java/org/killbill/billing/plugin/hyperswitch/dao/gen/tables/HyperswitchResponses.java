/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.hyperswitch.dao.gen.tables;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.killbill.billing.plugin.hyperswitch.dao.gen.Indexes;
import org.killbill.billing.plugin.hyperswitch.dao.gen.Keys;
import org.killbill.billing.plugin.hyperswitch.dao.gen.Killbill;
import org.killbill.billing.plugin.hyperswitch.dao.gen.tables.records.HyperswitchResponsesRecord;

/** This class is generated by jOOQ. */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HyperswitchResponses extends TableImpl<HyperswitchResponsesRecord> {

    private static final long serialVersionUID = 1L;

    /** The reference instance of <code>killbill.hyperswitch_responses</code> */
    public static final HyperswitchResponses HYPERSWITCH_RESPONSES = new HyperswitchResponses();

    /** The class holding records for this type */
    @Override
    public Class<HyperswitchResponsesRecord> getRecordType() {
        return HyperswitchResponsesRecord.class;
    }

    /** The column <code>killbill.hyperswitch_responses.record_id</code>. */
    public final TableField<HyperswitchResponsesRecord, ULong> RECORD_ID = createField(
            DSL.name("record_id"),
            SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true),
            this,
            "");

    /** The column <code>killbill.hyperswitch_responses.kb_account_id</code>. */
    public final TableField<HyperswitchResponsesRecord, String> KB_ACCOUNT_ID = createField(DSL.name("kb_account_id"),
            SQLDataType.CHAR(36).nullable(false), this, "");

    /** The column <code>killbill.hyperswitch_responses.kb_payment_id</code>. */
    public final TableField<HyperswitchResponsesRecord, String> KB_PAYMENT_ID = createField(DSL.name("kb_payment_id"),
            SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column
     * <code>killbill.hyperswitch_responses.kb_payment_transaction_id</code>.
     */
    public final TableField<HyperswitchResponsesRecord, String> KB_PAYMENT_TRANSACTION_ID = createField(
            DSL.name("kb_payment_transaction_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /** The column <code>killbill.hyperswitch_responses.transaction_type</code>. */
    public final TableField<HyperswitchResponsesRecord, String> TRANSACTION_TYPE = createField(
            DSL.name("transaction_type"), SQLDataType.VARCHAR(32).nullable(false), this, "");


    /** The column <code>killbill.hyperswitch_responses.amount</code>. */
    public final TableField<HyperswitchResponsesRecord, BigDecimal> AMOUNT = createField(
            DSL.name("amount"),
            SQLDataType.DECIMAL(15, 9).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)),
            this,
            "");

    /** The column <code>killbill.hyperswitch_responses.currency</code>. */
    public final TableField<HyperswitchResponsesRecord, String> CURRENCY = createField(
            DSL.name("currency"),
            SQLDataType.CHAR(3).defaultValue(DSL.inline("NULL", SQLDataType.CHAR)),
            this,
            "");

    /**
     * The column <code>killbill.hyperswitch_responses.payment_attempt_id</code>.
     */
    public final TableField<HyperswitchResponsesRecord, String> PAYMENT_ATTEMPT_ID = createField(
            DSL.name("payment_attempt_id"),
            SQLDataType.VARCHAR(64).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)),
            this,
            "");

    /** The column <code>killbill.hyperswitch_responses.error_message</code>. */
    public final TableField<HyperswitchResponsesRecord, String> ERROR_MESSAGE = createField(
            DSL.name("error_message"),
            SQLDataType.VARCHAR(64).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)),
            this,
            "");

    /** The column <code>killbill.hyperswitch_responses.error_code</code>. */
    public final TableField<HyperswitchResponsesRecord, String> ERROR_CODE = createField(
            DSL.name("error_code"),
            SQLDataType.VARCHAR(64).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)),
            this,
            "");

    /**
     * The column <code>killbill.hyperswitch.additional_data</code>.
     */
    public final TableField<HyperswitchResponsesRecord, String> ADDITIONAL_DATA = createField(
            DSL.name("additional_data"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /** The column <code>killbill.hyperswitch_responses.created_date</code>. */
    public final TableField<HyperswitchResponsesRecord, LocalDateTime> CREATED_DATE = createField(
            DSL.name("created_date"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /** The column <code>killbill.hyperswitch_responses.kb_tenant_id</code>. */
    public final TableField<HyperswitchResponsesRecord, String> KB_TENANT_ID = createField(DSL.name("kb_tenant_id"),
            SQLDataType.CHAR(36).nullable(false), this, "");

    private HyperswitchResponses(Name alias, Table<HyperswitchResponsesRecord> aliased) {
        this(alias, aliased, null);
    }

    private HyperswitchResponses(Name alias, Table<HyperswitchResponsesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>killbill.hyperswitch_responses</code> table reference
     */
    public HyperswitchResponses(String alias) {
        this(DSL.name(alias), HYPERSWITCH_RESPONSES);
    }

    /**
     * Create an aliased <code>killbill.hyperswitch_responses</code> table reference
     */
    public HyperswitchResponses(Name alias) {
        this(alias, HYPERSWITCH_RESPONSES);
    }

    /** Create a <code>killbill.hyperswitch_responses</code> table reference */
    public HyperswitchResponses() {
        this(DSL.name("hyperswitch_responses"), null);
    }

    public <O extends Record> HyperswitchResponses(
            Table<O> child, ForeignKey<O, HyperswitchResponsesRecord> key) {
        super(child, key, HYPERSWITCH_RESPONSES);
    }

    @Override
    public Schema getSchema() {
        return Killbill.KILLBILL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.HYPERSWITCH_RESPONSES_HYPERSWITCH_RESPONSES_KB_PAYMENT_ID,
                Indexes.HYPERSWITCH_RESPONSES_HYPERSWITCH_RESPONSES_KB_PAYMENT_TRANSACTION_ID,
                Indexes.HYPERSWITCH_RESPONSES_HYPERSWITCH_RESPONSES_PAYMENT_ATTEMPT_ID);
    }

    @Override
    public Identity<HyperswitchResponsesRecord, ULong> getIdentity() {
        return (Identity<HyperswitchResponsesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<HyperswitchResponsesRecord> getPrimaryKey() {
        return Keys.KEY_HYPERSWITCH_RESPONSES_PRIMARY;
    }

    @Override
    public List<UniqueKey<HyperswitchResponsesRecord>> getKeys() {
        return Arrays.<UniqueKey<HyperswitchResponsesRecord>>asList(
                Keys.KEY_HYPERSWITCH_RESPONSES_PRIMARY, Keys.KEY_HYPERSWITCH_RESPONSES_RECORD_ID);
    }

    @Override
    public HyperswitchResponses as(String alias) {
        return new HyperswitchResponses(DSL.name(alias), this);
    }

    @Override
    public HyperswitchResponses as(Name alias) {
        return new HyperswitchResponses(alias, this);
    }

    /** Rename this table */
    @Override
    public HyperswitchResponses rename(String name) {
        return new HyperswitchResponses(DSL.name(name), null);
    }

    /** Rename this table */
    @Override
    public HyperswitchResponses rename(Name name) {
        return new HyperswitchResponses(name, null);
    }
}
